alias ls='ls -F -G'
alias clean_cache='sudo killall -HUP mDNSResponder'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias download_hd_youtube='youtube-dl -f bestvideo+bestaudio'
alias search='locate -eil 10'
alias whereismyip='dig +short myip.opendns.com @resolver1.opendns.com'
alias cache_pass_git='git config --global credential.helper 'cache --timeout=1800''
alias true_wc='echo $(($(ls -l $1 | wc -l)-1))'
alias ver_tiempo='curl -s wttr.in/Curico | head -n 7'
alias web_tty='ttyd bash'
alias nmap='docker run --rm uzyexe/nmap'

man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}

red='\[\033[0;31m\]'
lred='\[\033[1;31m\]'
green='\[\033[0;32m\]'
lgreen='\[\033[1;32m\]'
orange='\[\033[0;33m\]'
yellow='\[\033[1;33m\]'
blue='\[\033[0;34m\]'
lblue='\[\033[1;34m\]'
mangenta='\[\033[1;35m\]'
white='\[\033[1;37m\]'

start() { brew services start $1; }
stop() { brew services stop $1; }
restart() { brew services restart $1; }
status() { brew services list | grep $1; }

function count_word {
	if [[ -f $1 && "$#" -eq 1 ]]; then  
		printf "count words in text\n"; sed -e 's/[^[:alnum:]]/ /g' $1 | tr '\n' " " |  tr -s " " | tr " " '\n'| sort | uniq -c| nl 
	else
		printf "error..\n";
	fi
}

function extract {
     if [ -f $1 ] ; then
         case $1 in
	     *.tar.xz)    tar xvf $1		;;
             *.tar.bz2)   tar xjf $1        ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1       ;;
             *.rar)       unrar x $1     ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1        ;;
             *.tbz2)      tar xjf $1      ;;
             *.tgz)       tar xzf $1       ;;
             *.zip)       unzip $1     ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
             *)           echo "'$1' No se puede extraer con extract()" ;;
         esac
     else
         echo "'$1' No es un fichero valido"
     fi
}

function domain_ip() {
	ip=$(resolveip -s $1)
	echo $ip | xsel -b
	echo $ip
}

function remove_docker_none(){
	none=$(docker images -a | grep "<none>" | awk '{print $3}')
	[[ -z $none ]] && printf "no hay contenedores <none>\n" || docker rmi $none

}

function binary() { echo $1 | perl -lpe '$_=join " ", unpack"(B8)*"'; }

function resolve_domain(){
		dig ns +short $1;
}

function check_temp(){
	temp=$(istats | grep ^CPU | awk '{print $3}' | cut -c 1-2); [[ $temp -gt 40 ]] && osascript -e "display notification \"High CPU TEMP $temp ÂºC\""
}

function get_ip(){
  curl --silent ipinfo.io/$1 | jq
}

